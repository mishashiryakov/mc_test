{"remainingRequest":"E:\\JS\\mc_test GIT\\mc_test\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\JS\\mc_test GIT\\mc_test\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\JS\\mc_test GIT\\mc_test\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\JS\\mc_test GIT\\mc_test\\src\\components\\app\\CurrentGoodsComponent.vue?vue&type=template&id=8978149c&","dependencies":[{"path":"E:\\JS\\mc_test GIT\\mc_test\\src\\components\\app\\CurrentGoodsComponent.vue","mtime":1602672315425},{"path":"E:\\JS\\mc_test GIT\\mc_test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JS\\mc_test GIT\\mc_test\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\JS\\mc_test GIT\\mc_test\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\JS\\mc_test GIT\\mc_test\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}